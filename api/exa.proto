syntax = "proto3";
import "google/protobuf/timestamp.proto";

option go_package = "internal/proto/exa";


service EXA {
  rpc GetBalance (GetBalanceRequest) returns (GetBalanceResponse) {}
  rpc GetOpenOrders (GetOpenOrdersRequest) returns (GetOpenOrdersResponse) {}
}

enum ExchangeType {
   UNKNOWN_EXCHANGE = 0;
   BINANCE = 1;
   FTX = 2;
   KRAKEN = 3;
   KUCOIN = 4;
   GATE_IO = 5;
   HUOBI = 6;
}

enum Side {
   UNKNOWN_SIDE = 0;
   BUY = 1;
   SELL = 2;
}

enum Pair {
   UNKNOWN_PAIR = 0;
   BTC_USDT = 1;
   ETH_USDT = 2;
   ADA_USDT = 3;
   BNB_USDT = 4;
   SOL_USDT = 5;
   DOT_USDT = 6;
   AVAX_USDT = 7;
   MATIC_USDT = 8;
   LTC_USDT = 9;
}

enum Asset {
   UNKNOWN_ASSET = 0;
   BTC = 1;
   ETH = 2;
   BNB = 3;
   ADA = 4;
   SOL = 5;
   DOT = 6;
   AVAX = 7;
   MATIC = 8;
   LTC = 9;
   USDT = 10;
   USD = 11;
   EUR = 12;
   JPY = 13;
   CHF = 14;
   CAD = 15;
   KRW = 16;
   USDC = 17;
}

enum OrderType {
   UNKNOWN_ORDER_TYPE = 0;
   MARKET = 1;
   LIMIT = 2;
   LIMIT_FOK = 3;
}

enum OrderState {
   UNKNOWN_ORDER_STATE = 0;
   CREATED = 1;
   SUBMITTED = 2;
   PARTIAL_FILLED = 3;
   FILLED = 4;
   PARTIAL_CANCELED = 5;
   CANCELING = 6;
   CANCELED = 7;
}

message GetBalanceRequest {
  google.protobuf.Timestamp request_time = 1;
  string request_id = 2;
  string api_key = 3;
  string api_secret = 4;
  ExchangeType exchange = 5;
  optional Asset asset = 6;
}

message GetBalanceResponse {
  google.protobuf.Timestamp response_time = 1;
  string request_id = 2;
  message Result {
     Asset asset = 1;
     string balance = 2;
  }
  repeated Result balances = 3;
}

message GetOpenOrdersRequest {
  google.protobuf.Timestamp request_time = 1;
  string request_id = 2;
  string api_key = 3;
  string api_secret = 4;
  ExchangeType exchange = 5;
  optional string account_id = 6;
  optional Pair pair = 7;
  optional Side side = 8;
  optional uint32 limit = 9;
}

message GetOpenOrdersResponse {
  google.protobuf.Timestamp response_time = 1;
  string request_id = 2;
  message Order {
     uint32 id = 1;
     string client_order_id = 2;
     Pair pair = 3;
     string price = 4;
     uint32 created_at = 5;
     OrderType order_type = 6;
     string filled_amount = 7;
     OrderState order_state = 8;
  }
  repeated Order orders = 3;
}
